// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PizzaStore.Infrastructure.Data;

namespace PizzaStore.Infrastructure.Migrations
{
    [DbContext(typeof(PizzaStoreDbContext))]
    partial class PizzaStoreDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PizzaStore.Domain.Models.Menu.Group", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsTopping")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Groups");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsTopping = false,
                            Name = "Pizza"
                        },
                        new
                        {
                            Id = 2,
                            IsTopping = true,
                            Name = "PizzaTopping"
                        },
                        new
                        {
                            Id = 3,
                            IsTopping = false,
                            Name = "MainMeal"
                        },
                        new
                        {
                            Id = 4,
                            IsTopping = true,
                            Name = "MainMealTopping"
                        },
                        new
                        {
                            Id = 5,
                            IsTopping = false,
                            Name = "Soup"
                        },
                        new
                        {
                            Id = 6,
                            IsTopping = false,
                            Name = "Drink"
                        });
                });

            modelBuilder.Entity("PizzaStore.Domain.Models.Menu.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            GroupId = 1,
                            Name = "Margherita",
                            Price = 20m
                        },
                        new
                        {
                            Id = 2,
                            GroupId = 1,
                            Name = "Vegetariana",
                            Price = 22m
                        },
                        new
                        {
                            Id = 3,
                            GroupId = 1,
                            Name = "Tosca",
                            Price = 25m
                        },
                        new
                        {
                            Id = 4,
                            GroupId = 1,
                            Name = "Venecia",
                            Price = 25m
                        },
                        new
                        {
                            Id = 5,
                            GroupId = 2,
                            Name = "Double cheese",
                            Price = 2m
                        },
                        new
                        {
                            Id = 6,
                            GroupId = 2,
                            Name = "Salami",
                            Price = 2m
                        },
                        new
                        {
                            Id = 7,
                            GroupId = 2,
                            Name = "Ham",
                            Price = 2m
                        },
                        new
                        {
                            Id = 8,
                            GroupId = 2,
                            Name = "Mushrooms",
                            Price = 2m
                        },
                        new
                        {
                            Id = 9,
                            GroupId = 3,
                            Name = "Pork chop with chips / rice / potatoes",
                            Price = 30m
                        },
                        new
                        {
                            Id = 10,
                            GroupId = 3,
                            Name = "Fish and chips",
                            Price = 28m
                        },
                        new
                        {
                            Id = 11,
                            GroupId = 3,
                            Name = "Hungarian style potato pancake",
                            Price = 27m
                        },
                        new
                        {
                            Id = 12,
                            GroupId = 4,
                            Name = "Salad bar",
                            Price = 5m
                        },
                        new
                        {
                            Id = 13,
                            GroupId = 4,
                            Name = "Set of sauces",
                            Price = 6m
                        },
                        new
                        {
                            Id = 14,
                            GroupId = 5,
                            Name = "Tomato soup",
                            Price = 12m
                        },
                        new
                        {
                            Id = 15,
                            GroupId = 5,
                            Name = "Chicken soup",
                            Price = 10m
                        },
                        new
                        {
                            Id = 16,
                            GroupId = 6,
                            Name = "Coffee",
                            Price = 5m
                        },
                        new
                        {
                            Id = 17,
                            GroupId = 6,
                            Name = "Tea",
                            Price = 5m
                        },
                        new
                        {
                            Id = 18,
                            GroupId = 6,
                            Name = "Coke",
                            Price = 5m
                        });
                });

            modelBuilder.Entity("PizzaStore.Domain.Models.OrderAggregate.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime>("OrderPlaced")
                        .HasColumnType("datetime2");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("PizzaStore.Domain.Models.OrderAggregate.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("OrderId")
                        .HasColumnType("int");

                    b.Property<int?>("ParentItemId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ParentItemId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("PizzaStore.Domain.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Joined")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("PizzaStore.Domain.Models.Menu.Product", b =>
                {
                    b.HasOne("PizzaStore.Domain.Models.Menu.Group", "Group")
                        .WithMany("Products")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PizzaStore.Domain.Models.OrderAggregate.Order", b =>
                {
                    b.HasOne("PizzaStore.Domain.Models.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("PizzaStore.Domain.Models.OrderAggregate.Address", "Address", b1 =>
                        {
                            b1.Property<int>("OrderId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("HouseNumber")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("HouseUnitNumber")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Street")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("OrderId");

                            b1.ToTable("Orders");

                            b1.WithOwner()
                                .HasForeignKey("OrderId");
                        });
                });

            modelBuilder.Entity("PizzaStore.Domain.Models.OrderAggregate.OrderItem", b =>
                {
                    b.HasOne("PizzaStore.Domain.Models.OrderAggregate.Order", null)
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId");

                    b.HasOne("PizzaStore.Domain.Models.OrderAggregate.OrderItem", "ParentItem")
                        .WithMany()
                        .HasForeignKey("ParentItemId");

                    b.HasOne("PizzaStore.Domain.Models.Menu.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
